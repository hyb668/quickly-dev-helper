<xml>
   <return_code><![CDATA[SUCCESS]]></return_code>
   <return_msg><![CDATA[OK]]></return_msg>
   <appid><![CDATA[wx2421b1c4370ec43b]]></appid>
   <mch_id><![CDATA[10000100]]></mch_id>
   <nonce_str><![CDATA[IITRi8Iabbblz1Jc]]></nonce_str>
   <sign><![CDATA[7921E432F65EB8ED0CE9755F0E86D72F]]></sign>
   <result_code><![CDATA[SUCCESS]]></result_code>
   <prepay_id><![CDATA[wx201411101639507cbf6ffd8b0779950874]]></prepay_id>
   <trade_type><![CDATA[APP]]></trade_type>
</xml> 

//方式一：用过可以

getDataFromXml(new ByteArrayInputStream(jsonString.getBytes()));


public void getDataFromXml(InputStream is) {
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        try {
            DocumentBuilder db = dbf.newDocumentBuilder();
            Document doc = db.parse(is);

            NodeList wordList = doc.getElementsByTagName("xml");
            Log.d("wx", "共有" + wordList.getLength() + "个xml节点");
            for (int i = 0; i < wordList.getLength(); i++) {
                Node aWord = wordList.item(i);
                Element elem = (Element) aWord;

                String prePayId = null;
                for (Node node = elem.getFirstChild(); node != null; node = node.getNextSibling()) {
                    if (node.getNodeType() == Node.ELEMENT_NODE) {
                        if (node.getFirstChild() == null) {
                            continue;
                        }
                        String name = node.getNodeName();
                        if (name.equals("prepay_id")) {
                            prePayId = node.getFirstChild().getNodeValue();
                            Log.d("wx", "prepay_id=" + prePayId);
                        }
                    }
                }
                if (prePayId != null && !prePayId.equals(" ")) {
                    this.prePayId = prePayId;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
	
//方式二 没用过

SAX解析方式：
如新浪的RSS的XML：
<rss version="2.0"> <channel> <title> <![CDATA[焦点新闻-新浪新闻]]> </title> <image> <title> <![CDATA[新闻中心-社会新闻]]> </title> <link>http://news.sina.com.cn/society/index.shtml</link> <url>http://www.sinaimg.cn/home/deco/2009/0330/logo_home_news.gif</url> </image>……………………


public class SaxRSS {

    public RSSFeed saxRss(InputStream is) throws Exception {
        SAXParserFactory factory = SAXParserFactory.newInstance();
        SAXParser parser = factory.newSAXParser();
        RssDefaultHandler rssDefaultHandler = new RssDefaultHandler();
        parser.parse(is, rssDefaultHandler);
        is.close();
        return rssDefaultHandler.getRSSFeed();
    }

    private class RssDefaultHandler extends DefaultHandler {
        RSSFeed rssFeed = null;
        RSSItem rssItem = null;
        String tag = null;
        String blagItem = null;

        public RSSFeed getRSSFeed() {
            return rssFeed;
        }

        public void startDocument() throws SAXException {
            super.startDocument();

        }

        @Override
        public void startElement(String uri, String localName, String qName,
                Attributes attributes) throws SAXException {
            super.startElement(uri, localName, qName, attributes);
            tag = localName;
            if ("rss".equals(localName)) {
                rssFeed = new RSSFeed();
            }
            if ("image".equals(localName)) {
                blagItem = "image";
            }
            if ("item".equals(localName)) {
                rssItem = new RSSItem();
                blagItem = "item";
            }

        }

        String itemTitle = "", startTitle = "", imgTitle = "";
        String resultDscription = "";

        @Override
        public void characters(char[] ch, int start, int length)
                throws SAXException {
            super.characters(ch, start, length);

            if (tag != null) {
                // 获取文本节点数据
                String textNode = new String(ch, start, length);
               
                if ("title".equals(tag) && blagItem == null) {
                   
                     //因title的内容位于CDATA中，会触发多个事件，会产//生很多空文本节点内容，因此把它们加起来。
                    // 用于处理CDATA字段的,比较麻烦
                   
                    startTitle = startTitle + textNode;
                    rssFeed.setTitle(startTitle.trim());
                }
                if ("image".equals(blagItem) && "title".equals(tag)) {
                    imgTitle = imgTitle + textNode;
                    rssFeed.setImg_title(imgTitle.trim());
                }
                if ("image".equals(blagItem) && "url".equals(tag)) {
                    rssFeed.setImg_url(textNode);
                }

                if (rssItem != null) {
                    if ("item".equals(blagItem) && "title".equals(tag)) {
                        itemTitle = itemTitle + textNode;
                        rssItem.setTitle(itemTitle.trim());
                    } else if ("item".equals(blagItem) && "link".equals(tag)) {

                        rssItem.setLink(textNode);

                    } else if ("item".equals(blagItem) && "pubDate".equals(tag)) {

                        rssItem.setPubDate(textNode);

                    } else if ("item".equals(blagItem)
                            && "description".equals(tag)) {

                        resultDscription = resultDscription + textNode;
                        rssItem.setDescription(resultDscription.trim());
                    }

                }

            }
        }

        @Override
        public void endElement(String uri, String localName, String qName)
                throws SAXException {
            super.endElement(uri, localName, qName);
            tag = null;
            if ("item".equals(blagItem) && "title".equals(localName)) {
                itemTitle = "";
            }
            if ("item".equals(blagItem) && "description".equals(localName)) {
                resultDscription = "";
            }
            if ("item".equals(localName)) {
                rssFeed.addItem(rssItem);
                rssItem = null;
            }
        }

        @Override
        public void endDocument() throws SAXException {
            super.endDocument();
        }

    }
}
